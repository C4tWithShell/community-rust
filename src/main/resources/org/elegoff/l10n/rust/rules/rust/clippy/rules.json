[
  {
    "key": "clippy::absurd_extreme_comparisons",
    "name": "Checks for comparisons where one side of the relation is either the minimum or maximum value for its type",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons"
  },
  {
    "key": "clippy::almost_swapped",
    "name": "Checks for foo = bar; bar = foo sequences.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped"
  },
  {
    "key": "clippy::approx_constant",
    "name": "Checks for floating point literals that approximate constants",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant"
  },
  {
    "key": "clippy::as_conversions",
    "name": "Checks for usage of as conversions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions"
  },
  {
    "key": "clippy::assertions_on_constants",
    "name": "Checks for assert!(true) and assert!(false) calls.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants"
  },
  {
    "key": "clippy::assign_op_pattern",
    "name": "Checks for a = a op b or a = b commutative_op a patterns.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern"
  },
  {
    "key": "clippy::await_holding_lock",
    "name": "Checks for calls to await while holding a non-async-aware MutexGuard.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#await_holding_lock"
  },
  {
    "key": "clippy::bad_bit_mask",
    "name": "Checks for incompatible bit masks in comparisons",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask"
  },
  {
    "key": "clippy::bind_instead_of_map",
    "name": "Checks for usage of _.and_then(|x| Some(y)), _.and_then(|x| Ok(y)) or _.or_else(|x| Err(y)).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#bind_instead_of_map"
  },
  {
    "key": "clippy::blacklisted_name",
    "name": "Checks for usage of blacklisted names for variables, such as foo.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name"
  },
  {
    "key": "clippy::blocks_in_if_conditions",
    "name": "Checks for if conditions that use blocks containing an expression, statements or conditions that use closures with blocks.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_if_conditions"
  },
  {
    "key": "clippy::bool_comparison",
    "name": "Checks for expressions of the form x == true, x != true and order comparisons such as x < true",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison"
  },
  {
    "key": "clippy::borrow_interior_mutable_const",
    "name": "Checks if const items which is interior mutable ",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#borrow_interior_mutable_const"
  },
  {
    "key": "clippy::borrowed_box",
    "name": "Checks for use of &Box<T> anywhere in the code.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#borrowed_box"
  },
  {
    "key": "clippy::box_vec",
    "name": "Checks for use of Box<Vec<_>> anywhere in the code.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#box_vec"
  },
  {
    "key": "clippy::boxed_local",
    "name": "Checks for usage of Box<T> where an unboxed T would work fine.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#boxed_local"
  },
  {
    "key": "clippy::builtin_type_shadow",
    "name": "Warns if a generic shadows a built-in type.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#builtin_type_shadow"
  },
  {
    "key": "clippy::cargo_common_metadata",
    "name": "Checks to see if all common metadata is defined in Cargo.toml",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata"
  },
  {
    "key": "clippy::cast_lossless",
    "name": "Checks for casts between numerical types that may be replaced by safe conversion functions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless"
  },
  {
    "key": "clippy::cast_possible_truncation",
    "name": "Checks for casts between numerical types that may truncate large values",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation"
  },
  {
    "key": "clippy::cast_possible_wrap",
    "name": "Checks for casts from an unsigned type to a signed type of the same size",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap"
  },
  {
    "key": "clippy::cast_precision_loss",
    "name": "Checks for casts from any numerical to a float type where the receiving type cannot store all values from the original type without rounding errors",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss"
  },
  {
    "key": "clippy::cast_ptr_alignment",
    "name": "Checks for casts from a less-strictly-aligned pointer to a more-strictly-aligned pointer",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_ptr_alignment"
  },
  {
    "key": "clippy::cast_ref_to_mut",
    "name": "Checks for casts of &T to &mut T anywhere in the code.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_ref_to_mut"
  },
  {
    "key": "clippy::cast_sign_loss",
    "name": "Checks for casts from a signed to an unsigned numerical type",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss"
  },
  {
    "key": "clippy::char_lit_as_u8",
    "name": "Checks for expressions where a character literal is cast to u8 and suggests using a byte literal instead.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8"
  },
  {
    "key": "clippy::chars_last_cmp",
    "name": "Checks for usage of .chars().last() or .chars().next_back() on a str to check if it ends with a given char.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#chars_last_cmp"
  },
  {
    "key": "clippy::chars_next_cmp",
    "name": "Checks for usage of .chars().next() on a str to check if it starts with a given char.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#chars_next_cmp"
  },
  {
    "key": "clippy::checked_conversions",
    "name": "Checks for explicit bounds checking when casting.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#checked_conversions"
  },
  {
    "key": "clippy::clone_double_ref",
    "name": "Checks for usage of .clone() on an &&T.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#clone_double_ref"
  },
  {
    "key": "clippy::clone_on_copy",
    "name": "Checks for usage of .clone() on a Copy type.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy"
  },
  {
    "key": "clippy::clone_on_ref_ptr",
    "name": "Checks for usage of .clone() on a ref-counted pointer",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_ref_ptr"
  },
  {
    "key": "clippy::cmp_nan",
    "name": "Checks for comparisons to NaN.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cmp_nan"
  },
  {
    "key": "clippy::cmp_null",
    "name": "This lint checks for equality comparisons with ptr::null",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cmp_null"
  },
  {
    "key": "clippy::cmp_owned",
    "name": "Checks for conversions to owned values just for the sake of a comparison.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned"
  },
  {
    "key": "clippy::cognitive_complexity",
    "name": "Checks for methods with high cognitive complexity.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity"
  },
  {
    "key": "clippy::collapsible_if",
    "name": "Checks for nested if statements which can be collapsed by &&-combining their conditions and for else { if ... } expressions that can be collapsed to else if ....",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if"
  },
  {
    "key": "clippy::comparison_chain",
    "name": "Checks comparison chains written with if that can be rewritten with match and cmp.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain"
  },
  {
    "key": "clippy::copy_iterator",
    "name": "Checks for types that implement Copy as well as Iterator.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#copy_iterator"
  },
  {
    "key": "clippy::crosspointer_transmute",
    "name": "Checks for transmutes between a type T and *T.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#crosspointer_transmute"
  },
  {
    "key": "clippy::dbg_macro",
    "name": "Checks for usage of dbg!() macro.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#dbg_macro"
  },
  {
    "key": "clippy::debug_assert_with_mut_call",
    "name": "Checks for function/method calls with a mutable parameter in debug_assert!, debug_assert_eq! and debug_assert_ne! macros.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#debug_assert_with_mut_call"
  },
  {
    "key": "clippy::decimal_literal_representation",
    "name": "Warns if there is a better representation for a numeric literal.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation"
  },
  {
    "key": "clippy::declare_interior_mutable_const",
    "name": "Checks for declaration of const items which is interior mutable ",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const"
  },
  {
    "key": "clippy::default_trait_access",
    "name": "Checks for literal calls to Default::default().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access"
  },
  {
    "key": "clippy::deprecated_cfg_attr",
    "name": "Checks for #[cfg_attr(rustfmt, rustfmt_skip)] and suggests to replace it with #[rustfmt::skip].",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#deprecated_cfg_attr"
  },
  {
    "key": "clippy::deprecated_semver",
    "name": "Checks for #[deprecated] annotations with a since field that is not a valid semantic version.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#deprecated_semver"
  },
  {
    "key": "clippy::deref_addrof",
    "name": "Checks for usage of *& and *&mut in expressions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#deref_addrof"
  },
  {
    "key": "clippy::derive_hash_xor_eq",
    "name": "Checks for deriving Hash but implementing PartialEq explicitly or vice versa.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#derive_hash_xor_eq"
  },
  {
    "key": "clippy::diverging_sub_expression",
    "name": "Checks for diverging calls that are not match arms or statements.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression"
  },
  {
    "key": "clippy::doc_markdown",
    "name": "Checks for the presence of _, :: or camel-case words outside ticks in documentation.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown"
  },
  {
    "key": "clippy::double_comparisons",
    "name": "Checks for double comparisons that could be simplified to a single expression.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#double_comparisons"
  },
  {
    "key": "clippy::double_must_use",
    "name": "Checks for a [#[must_use]] attribute without further information on functions and methods that return a type already marked as #[must_use].",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#double_must_use"
  },
  {
    "key": "clippy::double_neg",
    "name": "Detects expressions of the form --x.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#double_neg"
  },
  {
    "key": "clippy::double_parens",
    "name": "Checks for unnecessary double parentheses.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#double_parens"
  },
  {
    "key": "clippy::drop_bounds",
    "name": "Checks for generics with std::ops::Drop as bounds.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#drop_bounds"
  },
  {
    "key": "clippy::drop_copy",
    "name": "Checks for calls to std::mem::drop with a value that derives the Copy trait",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#drop_copy"
  },
  {
    "key": "clippy::drop_ref",
    "name": "Checks for calls to std::mem::drop with a reference instead of an owned value.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#drop_ref"
  },
  {
    "key": "clippy::duplicate_underscore_argument",
    "name": "Checks for function arguments having the similar names differing by an underscore.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#duplicate_underscore_argument"
  },
  {
    "key": "clippy::duration_subsec",
    "name": "Checks for calculation of subsecond microseconds or milliseconds from other Duration methods.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#duration_subsec"
  },
  {
    "key": "clippy::else_if_without_else",
    "name": "Checks for usage of if expressions with an else if branch, but without a final else branch.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else"
  },
  {
    "key": "clippy::empty_enum",
    "name": "Checks for enums with no variants.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#empty_enum"
  },
  {
    "key": "clippy::empty_line_after_outer_attr",
    "name": "Checks for empty lines after outer attributes",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_outer_attr"
  },
  {
    "key": "clippy::empty_loop",
    "name": "Checks for empty loop expressions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop"
  },
  {
    "key": "clippy::enum_clike_unportable_variant",
    "name": "Checks for C-like enumerations that are repr(isize/usize) and have values that don’t fit into an i32.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#enum_clike_unportable_variant"
  },
  {
    "key": "clippy::enum_glob_use",
    "name": "Checks for use Enum::*.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#enum_glob_use"
  },
  {
    "key": "clippy::enum_variant_names",
    "name": "Detects enumeration variants that are prefixed or suffixed by the same characters.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names"
  },
  {
    "key": "clippy::eq_op",
    "name": "Checks for equal operands to comparison, logical and bitwise, difference and division binary operators",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#eq_op"
  },
  {
    "key": "clippy::erasing_op",
    "name": "Checks for erasing operations, e.g., x * 0.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op"
  },
  {
    "key": "clippy::eval_order_dependence",
    "name": "Checks for a read and a write to the same variable where whether the read occurs before or after the write depends on the evaluation order of sub-expressions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#eval_order_dependence"
  },
  {
    "key": "clippy::excessive_precision",
    "name": "Checks for float literals with a precision greater than that supported by the underlying type.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#excessive_precision"
  },
  {
    "key": "clippy::exit",
    "name": "exit() terminates the program and doesn’t provide a stack trace.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#exit"
  },
  {
    "key": "clippy::expect_fun_call",
    "name": "Checks for calls to .expect(&format!(...)), .expect(foo(..)), etc., and suggests to use unwrap_or_else instead",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call"
  },
  {
    "key": "clippy::expect_used",
    "name": "Checks for .expect() calls on Options and Results.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#expect_used"
  },
  {
    "key": "clippy::expl_impl_clone_on_copy",
    "name": "Checks for explicit Clone implementations for Copy types.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#expl_impl_clone_on_copy"
  },
  {
    "key": "clippy::explicit_counter_loop",
    "name": "Checks for loops over slices with an explicit counter and suggests the use of .enumerate().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop"
  },
  {
    "key": "clippy::explicit_deref_methods",
    "name": "Checks for explicit deref() or deref_mut() method calls.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#explicit_deref_methods"
  },
  {
    "key": "clippy::explicit_into_iter_loop",
    "name": "Checks for loops on y.into_iter() where y will do, and suggests the latter.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#explicit_into_iter_loop"
  },
  {
    "key": "clippy::explicit_iter_loop",
    "name": "Checks for loops on x.iter() where &x will do, and suggests the latter.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop"
  },
  {
    "key": "clippy::explicit_write",
    "name": "Checks for usage of write!() / writeln()! which can be replaced with (e)print!() / (e)println!()",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#explicit_write"
  },
  {
    "key": "clippy::extra_unused_lifetimes",
    "name": "Checks for lifetimes in generics that are never used anywhere else.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes"
  },
  {
    "key": "clippy::fallible_impl_from",
    "name": "Checks for impls of From<..> that contain panic!() or unwrap()",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#fallible_impl_from"
  },
  {
    "key": "clippy::filetype_is_file",
    "name": "Checks for FileType::is_file().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#filetype_is_file"
  },
  {
    "key": "clippy::filter_map",
    "name": "Checks for usage of _.filter(_).map(_), _.filter(_).flat_map(_), _.filter_map(_).flat_map(_) and similar.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#filter_map"
  },
  {
    "key": "clippy::filter_map_next",
    "name": "Checks for usage of _.filter_map(_).next().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#filter_map_next"
  },
  {
    "key": "clippy::filter_next",
    "name": "Checks for usage of _.filter(_).next().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#filter_next"
  },
  {
    "key": "clippy::find_map",
    "name": "Checks for usage of _.find(_).map(_).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#find_map"
  },
  {
    "key": "clippy::flat_map_identity",
    "name": "Checks for usage of flat_map(|x| x).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#flat_map_identity"
  },
  {
    "key": "clippy::float_arithmetic",
    "name": "Checks for float arithmetic.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic"
  },
  {
    "key": "clippy::float_cmp",
    "name": "Checks for (in-)equality comparisons on floating-point values (apart from zero)",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp"
  },
  {
    "key": "clippy::float_cmp_const",
    "name": "Checks for (in-)equality comparisons on floating-point value and constant",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp_const"
  },
  {
    "key": "clippy::fn_address_comparisons",
    "name": "Checks for comparisons with an address of a function item.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#fn_address_comparisons"
  },
  {
    "key": "clippy::fn_params_excessive_bools",
    "name": "Checks for excessive use of bools in function definitions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#fn_params_excessive_bools"
  },
  {
    "key": "clippy::fn_to_numeric_cast",
    "name": "Checks for casts of function pointers to something other than usize",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#fn_to_numeric_cast"
  },
  {
    "key": "clippy::fn_to_numeric_cast_with_truncation",
    "name": "Checks for casts of a function pointer to a numeric type not wide enough to store address.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#fn_to_numeric_cast_with_truncation"
  },
  {
    "key": "clippy::for_kv_map",
    "name": "Checks for iterating a map (HashMap or BTreeMap) and ignoring either the keys or values.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map"
  },
  {
    "key": "clippy::for_loops_over_fallibles",
    "name": "Checks for for loops over Option or Result values.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#for_loops_over_fallibles"
  },
  {
    "key": "clippy::forget_copy",
    "name": "Checks for calls to std::mem::forget with a value that derives the Copy trait",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#forget_copy"
  },
  {
    "key": "clippy::forget_ref",
    "name": "Checks for calls to std::mem::forget with a reference instead of an owned value",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#forget_ref"
  },
  {
    "key": "clippy::future_not_send",
    "name": "This lint requires Future implementations returned from functions and methods to implement the Send marker trait.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#future_not_send"
  },
  {
    "key": "clippy::get_last_with_len",
    "name": "hecks for using x.get(x.len() - 1) instead of x.last().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#get_last_with_len"
  },
  {
    "key": "clippy::get_unwrap",
    "name": "Checks for use of .get().unwrap() (or .get_mut().unwrap) on a standard library type which implements Index",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#get_unwrap"
  },
  {
    "key": "clippy::identity_op",
    "name": "Checks for identity operations",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#identity_op"
  },
  {
    "key": "clippy::if_let_mutex",
    "name": "Checks for Mutex::lock calls in if let expression with lock calls in any of the else blocks.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#if_let_mutex"
  },
  {
    "key": "clippy::if_let_some_result",
    "name": "Checks for unnecessary ok() in if let.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#if_let_some_result"
  },
  {
    "key": "clippy::if_not_else",
    "name": "Checks for usage of ! or != in an if condition with an else branch.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else"
  },
  {
    "key": "clippy::if_same_then_else",
    "name": "Checks for if/else with the same body as the then part and the else part.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else"
  },
  {
    "key": "clippy::ifs_same_cond",
    "name": "Checks for consecutive ifs with the same condition.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#ifs_same_cond"
  },
  {
    "key": "clippy::implicit_hasher",
    "name": "Checks for public impl or fn missing generalization over different hashers",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#implicit_hasher"
  },
  {
    "key": "clippy::implicit_return",
    "name": "Checks for missing return statements at the end of a block.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return"
  },
  {
    "key": "clippy::implicit_saturating_sub",
    "name": "Checks for implicit saturating subtraction.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#implicit_saturating_sub"
  },
  {
    "key": "clippy::imprecise_flops",
    "name": "Looks for floating-point expressions that can be expressed using built-in methods to improve accuracy at the cost of performance.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#imprecise_flops"
  },
  {
    "key": "clippy::inconsistent_digit_grouping",
    "name": "Warns if an integral or floating-point constant is grouped inconsistently with underscores.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping"
  },
  {
    "key": "clippy::indexing_slicing",
    "name": "Checks for usage of indexing or slicing",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing"
  },
  {
    "key": "clippy::ineffective_bit_mask",
    "name": "Checks for bit masks in comparisons which can be removed without changing the outcome",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#ineffective_bit_mask"
  },
  {
    "key": "clippy::inefficient_to_string",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string"
  },
  {
    "key": "clippy::infallible_destructuring_match",
    "name": "Checks for matches being used to destructure a single-variant enum or tuple struct where a let will suffice.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#infallible_destructuring_match"
  },
  {
    "key": "clippy::infinite_iter",
    "name": "Checks for iteration that is guaranteed to be infinite.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#infinite_iter"
  },
  {
    "key": "clippy::inherent_to_string",
    "name": "Checks for the definition of inherent methods with a signature of to_string(&self) -> String.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string"
  },
  {
    "key": "clippy::inherent_to_string_shadow_display",
    "name": "Checks for the definition of inherent methods with a signature of to_string(&self) -> String and if the type implementing this method also implements the Display trait.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display"
  },
  {
    "key": "clippy::inline_always",
    "name": "Checks for items annotated with #[inline(always)], unless the annotated function is empty or simply panics.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#inline_always"
  },
  {
    "key": "clippy::inline_fn_without_body",
    "name": "Checks for #[inline] on trait methods without bodies",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#inline_fn_without_body"
  },
  {
    "key": "clippy::int_plus_one",
    "name": "Checks for usage of x >= y + 1 or x - 1 >= y (and <=) in a block",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#int_plus_one"
  },
  {
    "key": "clippy::integer_arithmetic",
    "name": "Checks for integer arithmetic operations which could overflow or panic.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic"
  },
  {
    "key": "clippy::integer_division",
    "name": "Checks for division of integers",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#integer_division"
  },
  {
    "key": "clippy::into_iter_on_ref",
    "name": "Checks for into_iter calls on references which should be replaced by iter or iter_mut.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref"
  },
  {
    "key": "clippy::invalid_atomic_ordering",
    "name": "Checks for usage of invalid atomic ordering in atomic loads/stores and memory fences.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#invalid_atomic_ordering"
  },
  {
    "key": "clippy::invalid_regex",
    "name": "Checks regex creation",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#invalid_regex"
  },
  {
    "key": "clippy::invalid_upcast_comparisons",
    "name": "Checks for comparisons where the relation is always either true or false",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#invalid_upcast_comparisons"
  },
  {
    "key": "clippy::items_after_statements",
    "name": "Checks for items declared after some statement in a block.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements"
  },
  {
    "key": "clippy::iter_cloned_collect",
    "name": "Checks for the use of .cloned().collect() on slice to create a Vec.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#iter_cloned_collect"
  },
  {
    "key": "clippy::iter_next_loop",
    "name": "Checks for loops on x.next().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#iter_next_loop"
  },
  {
    "key": "clippy::iter_nth",
    "name": "Checks for use of .iter().nth() ",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth"
  },
  {
    "key": "clippy::iter_nth_zero",
    "name": "Checks for the use of iter.nth(0).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth_zero"
  },
  {
    "key": "clippy::iter_skip_next",
    "name": "Checks for use of .skip(x).next() on iterators.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#iter_skip_next"
  },
  {
    "key": "clippy::iterator_step_by_zero",
    "name": "Checks for calling .step_by(0) on iterators which panics.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#iterator_step_by_zero"
  },
  {
    "key": "clippy::just_underscores_and_digits",
    "name": "Checks if you have variables whose name consists of just underscores and digits.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#just_underscores_and_digits"
  },
  {
    "key": "clippy::large_const_arrays",
    "name": "Checks for large const arrays that should be defined as static instead.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#large_const_arrays"
  },
  {
    "key": "clippy::large_digit_groups",
    "name": "Warns if the digits of an integral or floating-point constant are grouped into groups that are too large.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#large_digit_groups"
  },
  {
    "key": "clippy::large_enum_variant",
    "name": "Checks for large size differences between variants on enums.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant"
  },
  {
    "key": "clippy::large_stack_arrays",
    "name": "Checks for local arrays that may be too large.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#large_stack_arrays"
  },
  {
    "key": "clippy::len_without_is_empty",
    "name": "Checks for items that implement .len() but not .is_empty().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty"
  },
  {
    "key": "clippy::len_zero",
    "name": "Checks for getting the length of something via .len() just to compare to zero, and suggests using .is_empty() where applicable.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#len_zero"
  },
  {
    "key": "clippy::let_and_return",
    "name": "Checks for let-bindings, which are subsequently returned.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return"
  },
  {
    "key": "clippy::let_underscore_lock",
    "name": "Checks for let _ = sync_lock",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_lock"
  },
  {
    "key": "clippy::let_underscore_must_use",
    "name": "Checks for let _ = <expr> where expr is #[must_use]",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_must_use"
  },
  {
    "key": "clippy::let_unit_value",
    "name": "Checks for binding a unit value.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value"
  },
  {
    "key": "clippy::linkedlist",
    "name": "Checks for usage of any LinkedList",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#linkedlist"
  },
  {
    "key": "clippy::logic_bug",
    "name": "Checks for boolean expressions that contain terminals that can be eliminated.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#logic_bug"
  },
  {
    "key": "clippy::lossy_float_literal",
    "name": "Checks for whole number float literals that cannot be represented as the underlying type without loss.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#lossy_float_literal"
  },
  {
    "key": "clippy::macro_use_imports",
    "name": "Checks for #[macro_use] use....",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#macro_use_imports"
  },
  {
    "key": "clippy::main_recursion",
    "name": "Checks for recursion using the entrypoint.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#main_recursion"
  },
  {
    "key": "clippy::manual_async_fn",
    "name": "It checks for manual implementations of async functions.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#manual_async_fn"
  },
  {
    "key": "clippy::manual_memcpy",
    "name": "Checks for for-loops that manually copy items between slices that could be optimized by having a memcpy.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy"
  },
  {
    "key": "clippy::manual_non_exhaustive",
    "name": "Checks for manual implementations of the non-exhaustive pattern.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive"
  },
  {
    "key": "clippy::manual_saturating_arithmetic",
    "name": "Checks for .checked_add/sub(x).unwrap_or(MAX/MIN).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#manual_saturating_arithmetic"
  },
  {
    "key": "clippy::manual_swap",
    "name": "Checks for manual swapping.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#manual_swap"
  },
  {
    "key": "clippy::many_single_char_names",
    "name": "Checks for too many variables whose name consists of a single character.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names"
  },
  {
    "key": "clippy::map_clone",
    "name": "Checks for usage of iterator.map(|x| x.clone()) and suggests iterator.cloned() instead",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#map_clone"
  },
  {
    "key": "clippy::map_entry",
    "name": "Checks for uses of contains_key + insert on HashMap or BTreeMap.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#map_entry"
  },
  {
    "key": "clippy::map_flatten",
    "name": "Checks for usage of _.map(_).flatten(_)",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten"
  },
  {
    "key": "clippy::map_unwrap_or",
    "name": "Checks for usage of option.map(_).unwrap_or(_) or option.map(_).unwrap_or_else(_) or result.map(_).unwrap_or_else(_).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or"
  },
  {
    "key": "clippy::match_as_ref",
    "name": "Checks for match which is used to add a reference to an Option value.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_as_ref"
  },
  {
    "key": "clippy::match_bool",
    "name": "Checks for matches where match expression is a bool",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_bool"
  },
  {
    "key": "clippy::match_on_vec_items",
    "name": "Checks for match vec[idx] or match vec[n..m].",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_on_vec_items"
  },
  {
    "key": "clippy::match_overlapping_arm",
    "name": "Checks for overlapping match arms.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_overlapping_arm"
  },
  {
    "key": "clippy::match_ref_pats",
    "name": "Checks for matches where all arms match a reference, suggesting to remove the reference and deref the matched expression instead",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats"
  },
  {
    "key": "clippy::match_same_arms",
    "name": "Checks for match with identical arm bodies.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms"
  },
  {
    "key": "clippy::match_single_binding",
    "name": "Checks for useless match that binds to only one value.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding"
  },
  {
    "key": "clippy::match_wild_err_arm",
    "name": "Checks for arm which matches all errors with Err(_) and take drastic actions like panic!.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_wild_err_arm"
  },
  {
    "key": "clippy::match_wildcard_for_single_variants",
    "name": "Checks for wildcard enum matches for a single variant.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#match_wildcard_for_single_variants"
  },
  {
    "key": "clippy::maybe_infinite_iter",
    "name": "Checks for iteration that may be infinite.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#maybe_infinite_iter"
  },
  {
    "key": "clippy::mem_discriminant_non_enum",
    "name": "Checks for calls of mem::discriminant() on a non-enum type.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mem_discriminant_non_enum"
  },
  {
    "key": "clippy::mem_forget",
    "name": "Checks for usage of std::mem::forget(t) where t is Drop.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mem_forget"
  },
  {
    "key": "clippy::mem_replace_option_with_none",
    "name": "Checks for mem::replace() on an Option with None.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mem_replace_option_with_none"
  },
  {
    "key": "clippy::mem_replace_with_default",
    "name": "Checks for std::mem::replace on a value of type T with T::default().",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mem_replace_with_default"
  },
  {
    "key": "clippy::mem_replace_with_uninit",
    "name": "Checks for mem::replace(&mut _, mem::uninitialized()) and mem::replace(&mut _, mem::zeroed()).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mem_replace_with_uninit"
  },
  {
    "key": "clippy::min_max",
    "name": "Checks for expressions where std::cmp::min and max are used to clamp values, but switched so that the result is constant.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#min_max"
  },
  {
    "key": "clippy::mismatched_target_os",
    "name": "Checks for cfg attributes having operating systems used in target family position.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mismatched_target_os"
  },
  {
    "key": "clippy::misrefactored_assign_op",
    "name": "Checks for a op= a op b or a op= b op a patterns.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#misrefactored_assign_op"
  },
  {
    "key": "clippy::missing_const_for_fn",
    "name": "Suggests the use of const in functions and methods where possible.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn"
  },
  {
    "key": "clippy::missing_docs_in_private_items",
    "name": "Warns if there is missing doc for any documentable item (public or private).",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items"
  },
  {
    "key": "clippy::missing_errors_doc",
    "name": "Checks the doc comments of publicly visible functions that return a Result type and warns if there is no # Errors section.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc"
  },
  {
    "key": "clippy::missing_inline_in_public_items",
    "name": "it lints if an exported function, method, trait method with default impl, or trait method impl is not #[inline].",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items"
  },
  {
    "key": "clippy::missing_safety_doc",
    "name": "Checks for the doc comments of publicly visible unsafe functions and warns if there is no # Safety section.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc"
  },
  {
    "key": "clippy::mistyped_literal_suffixes",
    "name": "Warns for mistyped suffix in literals",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mistyped_literal_suffixes"
  },
  {
    "key": "clippy::mixed_case_hex_literals",
    "name": "Warns on hexadecimal literals with mixed-case letter digits.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mixed_case_hex_literals"
  },
  {
    "key": "clippy::module_inception",
    "name": "Checks for modules that have the same name as their parent module",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#module_inception"
  },
  {
    "key": "clippy::module_name_repetitions",
    "name": "Detects type names that are prefixed or suffixed by the containing module’s name.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions"
  },
  {
    "key": "clippy::modulo_arithmetic",
    "name": "Checks for modulo arithemtic.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic"
  },
  {
    "key": "clippy::modulo_one",
    "name": "Checks for getting the remainder of a division by one.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#modulo_one"
  },
  {
    "key": "clippy::multiple_crate_versions",
    "name": "Checks to see if multiple versions of a crate are being used.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions"
  },
  {
    "key": "clippy::multiple_inherent_impl",
    "name": "Checks for multiple inherent implementations of a struct",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#multiple_inherent_impl"
  },
  {
    "key": "clippy::must_use_candidate",
    "name": "Checks for public functions that have no [#[must_use]] attribute, but return something not already marked must-use, have no mutable arg and mutate no statics.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate"
  },
  {
    "key": "clippy::must_use_unit",
    "name": "Checks for a [#[must_use]] attribute on unit-returning functions and methods.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#must_use_unit"
  },
  {
    "key": "clippy::mut_from_ref",
    "name": "This lint checks for functions that take immutable references and return mutable ones.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref"
  },
  {
    "key": "clippy::mut_mut",
    "name": "Checks for instances of mut mut references.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mut_mut"
  },
  {
    "key": "clippy::mut_range_bound",
    "name": "Checks for loops which have a range bound that is a mutable variable",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mut_range_bound"
  },
  {
    "key": "clippy::mutable_key_type",
    "name": "Checks for sets/maps with mutable key types.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mutable_key_type"
  },
  {
    "key": "clippy::mutex_atomic",
    "name": "Checks for usages of Mutex<X> where an atomic will do.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mutex_atomic"
  },
  {
    "key": "clippy::mutex_integer",
    "name": "Checks for usages of Mutex<X> where X is an integral type.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#mutex_integer"
  },
  {
    "key": "clippy::naive_bytecount",
    "name": "Checks for naive byte counts",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#naive_bytecount"
  },
  {
    "key": "clippy::needless_bool",
    "name": "Checks for expressions of the form if c { true } else { false } (or vice versa) and suggest using the condition directly.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool"
  },
  {
    "key": "clippy::needless_borrow",
    "name": "Checks for address of operations (&) that are going to be dereferenced immediately by the compiler.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow"
  },
  {
    "key": "clippy::needless_borrowed_reference",
    "name": "Checks for useless borrowed references.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference"
  },
  {
    "key": "clippy::needless_collect",
    "name": "Checks for functions collecting an iterator when collect is not needed.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect"
  },
  {
    "key": "clippy::needless_continue",
    "name": "The lint checks for if-statements appearing in loops that contain a continue statement in either their main blocks or their else-blocks",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue"
  },
  {
    "key": "clippy::needless_doctest_main",
    "name": "Checks for fn main() { .. } in doctests",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main"
  },
  {
    "key": "clippy::needless_lifetimes",
    "name": "Checks for lifetime annotations which can be removed by relying on lifetime elision.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes"
  },
  {
    "key": "clippy::needless_pass_by_value",
    "name": "Checks for functions taking arguments by value, but not consuming them in its body.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value"
  },
  {
    "key": "clippy::needless_range_loop",
    "name": "Checks for looping over the range of 0..len of some collection just to get the values by index.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop"
  },
  {
    "key": "clippy::needless_return",
    "name": "Checks for return statements at the end of a block.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_return"
  },
  {
    "key": "clippy::needless_update",
    "name": "Checks for needlessly including a base struct on update when all fields are changed anyway.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#needless_update"
  },
  {
    "key": "clippy::neg_cmp_op_on_partial_ord",
    "name": "Checks for the usage of negated comparison operators on types which only implement PartialOrd.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#neg_cmp_op_on_partial_ord"
  },
  {
    "key": "clippy::neg_multiply",
    "name": "Checks for multiplication by -1 as a form of negation.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#neg_multiply"
  },
  {
    "key": "clippy::never_loop",
    "name": "Checks for loops that will always break, return or continue an outer loop.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#never_loop"
  },
  {
    "key": "clippy::new_ret_no_self",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#new_ret_no_self"
  },
  {
    "key": "clippy::new_without_default",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default"
  },
  {
    "key": "clippy::no_effect",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#no_effect"
  },
  {
    "key": "clippy::non_ascii_literal",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#non_ascii_literal"
  },
  {
    "key": "clippy::nonminimal_bool",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool"
  },
  {
    "key": "clippy::nonsensical_open_options",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#nonsensical_open_options"
  },
  {
    "key": "clippy::not_unsafe_ptr_arg_deref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref"
  },
  {
    "key": "clippy::ok_expect",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#ok_expect"
  },
  {
    "key": "clippy::op_ref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#op_ref"
  },
  {
    "key": "clippy::option_as_ref_deref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#option_as_ref_deref"
  },
  {
    "key": "clippy::option_env_unwrap",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#option_env_unwrap"
  },
  {
    "key": "clippy::option_map_or_none",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none"
  },
  {
    "key": "clippy::option_map_unit_fn",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn"
  },
  {
    "key": "clippy::option_option",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#option_option"
  },
  {
    "key": "clippy::or_fun_call",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call"
  },
  {
    "key": "clippy::out_of_bounds_indexing",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#out_of_bounds_indexing"
  },
  {
    "key": "clippy::overflow_check_conditional",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#overflow_check_conditional"
  },
  {
    "key": "clippy::panic",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#panic"
  },
  {
    "key": "clippy::panic_params",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#panic_params"
  },
  {
    "key": "clippy::panicking_unwrap",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#panicking_unwrap"
  },
  {
    "key": "clippy::partialeq_ne_impl",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#partialeq_ne_impl"
  },
  {
    "key": "clippy::path_buf_push_overwrite",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#path_buf_push_overwrite"
  },
  {
    "key": "clippy::possible_missing_comma",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#possible_missing_comma"
  },
  {
    "key": "clippy::precedence",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#precedence"
  },
  {
    "key": "clippy::print_literal",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#print_literal"
  },
  {
    "key": "clippy::print_stdout",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout"
  },
  {
    "key": "clippy::print_with_newline",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#print_with_newline"
  },
  {
    "key": "clippy::println_empty_string",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#println_empty_string"
  },
  {
    "key": "clippy::ptr_arg",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg"
  },
  {
    "key": "clippy::ptr_offset_with_cast",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast"
  },
  {
    "key": "clippy::pub_enum_variant_names",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#pub_enum_variant_names"
  },
  {
    "key": "clippy::question_mark",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#question_mark"
  },
  {
    "key": "clippy::range_minus_one",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#range_minus_one"
  },
  {
    "key": "clippy::range_plus_one",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#range_plus_one"
  },
  {
    "key": "clippy::range_step_by_zero",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#range_step_by_zero"
  },
  {
    "key": "clippy::range_zip_with_len",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#range_zip_with_len"
  },
  {
    "key": "clippy::redundant_allocation",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_allocation"
  },
  {
    "key": "clippy::redundant_clone",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone"
  },
  {
    "key": "clippy::redundant_closure",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure"
  },
  {
    "key": "clippy::redundant_closure_call",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_call"
  },
  {
    "key": "clippy::redundant_closure_for_method_calls",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls"
  },
  {
    "key": "clippy::redundant_field_names",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names"
  },
  {
    "key": "clippy::redundant_pattern",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern"
  },
  {
    "key": "clippy::redundant_pattern_matching",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching"
  },
  {
    "key": "clippy::redundant_pub_crate",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pub_crate"
  },
  {
    "key": "clippy::redundant_static_lifetimes",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes"
  },
  {
    "key": "clippy::ref_in_deref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref"
  },
  {
    "key": "clippy::regex_macro",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#regex_macro"
  },
  {
    "key": "clippy::replace_consts",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#replace_consts"
  },
  {
    "key": "clippy::rest_pat_in_fully_bound_structs",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#rest_pat_in_fully_bound_structs"
  },
  {
    "key": "clippy::result_map_or_into_option",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#result_map_or_into_option"
  },
  {
    "key": "clippy::result_map_unit_fn",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#result_map_unit_fn"
  },
  {
    "key": "clippy::reversed_empty_ranges",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#reversed_empty_ranges"
  },
  {
    "key": "clippy::same_functions_in_if_condition",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#same_functions_in_if_condition"
  },
  {
    "key": "clippy::search_is_some",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some"
  },
  {
    "key": "clippy::serde_api_misuse",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#serde_api_misuse"
  },
  {
    "key": "clippy::shadow_reuse",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse"
  },
  {
    "key": "clippy::shadow_same",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#shadow_same"
  },
  {
    "key": "clippy::shadow_unrelated",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated"
  },
  {
    "key": "clippy::short_circuit_statement",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#short_circuit_statement"
  },
  {
    "key": "clippy::should_assert_eq",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#should_assert_eq"
  },
  {
    "key": "clippy::should_implement_trait",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait"
  },
  {
    "key": "clippy::similar_names",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#similar_names"
  },
  {
    "key": "clippy::single_char_pattern",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern"
  },
  {
    "key": "clippy::single_component_path_imports",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports"
  },
  {
    "key": "clippy::single_match",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#single_match"
  },
  {
    "key": "clippy::single_match_else",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else"
  },
  {
    "key": "clippy::skip_while_next",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#skip_while_next"
  },
  {
    "key": "clippy::slow_vector_initialization",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#slow_vector_initialization"
  },
  {
    "key": "clippy::str_to_string",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string"
  },
  {
    "key": "clippy::string_add",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#string_add"
  },
  {
    "key": "clippy::string_add_assign",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#string_add_assign"
  },
  {
    "key": "clippy::string_extend_chars",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#string_extend_chars"
  },
  {
    "key": "clippy::string_lit_as_bytes",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#string_lit_as_bytes"
  },
  {
    "key": "clippy::string_to_string",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#string_to_string"
  },
  {
    "key": "clippy::struct_excessive_bools",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools"
  },
  {
    "key": "clippy::suboptimal_flops",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suboptimal_flops"
  },
  {
    "key": "clippy::suspicious_arithmetic_impl",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_arithmetic_impl"
  },
  {
    "key": "clippy::suspicious_assignment_formatting",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting"
  },
  {
    "key": "clippy::suspicious_else_formatting",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_else_formatting"
  },
  {
    "key": "clippy::suspicious_map",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_map"
  },
  {
    "key": "clippy::suspicious_op_assign_impl",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_op_assign_impl"
  },
  {
    "key": "clippy::suspicious_unary_op_formatting",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_unary_op_formatting"
  },
  {
    "key": "clippy::tabs_in_doc_comments",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments"
  },
  {
    "key": "clippy::temporary_assignment",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#temporary_assignment"
  },
  {
    "key": "clippy::temporary_cstring_as_ptr",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#temporary_cstring_as_ptr"
  },
  {
    "key": "clippy::to_digit_is_some",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#to_digit_is_some"
  },
  {
    "key": "clippy::todo",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#todo"
  },
  {
    "key": "clippy::too_many_arguments",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments"
  },
  {
    "key": "clippy::too_many_lines",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines"
  },
  {
    "key": "clippy::toplevel_ref_arg",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg"
  },
  {
    "key": "clippy::transmute_bytes_to_str",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str"
  },
  {
    "key": "clippy::transmute_float_to_int",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_float_to_int"
  },
  {
    "key": "clippy::transmute_int_to_bool",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_int_to_bool"
  },
  {
    "key": "clippy::transmute_int_to_char",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_int_to_char"
  },
  {
    "key": "clippy::transmute_int_to_float",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_int_to_float"
  },
  {
    "key": "clippy::transmute_ptr_to_ptr",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ptr"
  },
  {
    "key": "clippy::transmute_ptr_to_ref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref"
  },
  {
    "key": "clippy::transmuting_null",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#transmuting_null"
  },
  {
    "key": "clippy::trivial_regex",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#trivial_regex"
  },
  {
    "key": "clippy::trivially_copy_pass_by_ref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref"
  },
  {
    "key": "clippy::try_err",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#try_err"
  },
  {
    "key": "clippy::type_complexity",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity"
  },
  {
    "key": "clippy::type_repetition_in_bounds",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#type_repetition_in_bounds"
  },
  {
    "key": "clippy::unicode_not_nfc",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unicode_not_nfc"
  },
  {
    "key": "clippy::unimplemented",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unimplemented"
  },
  {
    "key": "clippy::uninit_assumed_init",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#uninit_assumed_init"
  },
  {
    "key": "clippy::unit_arg",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg"
  },
  {
    "key": "clippy::unit_cmp",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unit_cmp"
  },
  {
    "key": "clippy::unknown_clippy_lints",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unknown_clippy_lints"
  },
  {
    "key": "clippy::unnecessary_cast",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast"
  },
  {
    "key": "clippy::unnecessary_filter_map",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_filter_map"
  },
  {
    "key": "clippy::unnecessary_fold",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_fold"
  },
  {
    "key": "clippy::unnecessary_mut_passed",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed"
  },
  {
    "key": "clippy::unnecessary_operation",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation"
  },
  {
    "key": "clippy::unnecessary_unwrap",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap"
  },
  {
    "key": "clippy::unneeded_field_pattern",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unneeded_field_pattern"
  },
  {
    "key": "clippy::unneeded_wildcard_pattern",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unneeded_wildcard_pattern"
  },
  {
    "key": "clippy::unreachable",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unreachable"
  },
  {
    "key": "clippy::unreadable_literal",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal"
  },
  {
    "key": "clippy::unsafe_derive_deserialize",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unsafe_derive_deserialize"
  },
  {
    "key": "clippy::unsafe_removed_from_name",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unsafe_removed_from_name"
  },
  {
    "key": "clippy::unsafe_vector_initialization",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unsafe_vector_initialization"
  },
  {
    "key": "clippy::unseparated_literal_suffix",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix"
  },
  {
    "key": "clippy::unsound_collection_transmute",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unsound_collection_transmute"
  },
  {
    "key": "clippy::unstable_as_mut_slice",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unstable_as_mut_slice"
  },
  {
    "key": "clippy::unstable_as_slice",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unstable_as_slice"
  },
  {
    "key": "clippy::unused_collect",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unused_collect"
  },
  {
    "key": "clippy::unused_io_amount",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unused_io_amount"
  },
  {
    "key": "clippy::unused_label",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unused_label"
  },
  {
    "key": "clippy::unused_self",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unused_self"
  },
  {
    "key": "clippy::unused_unit",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit"
  },
  {
    "key": "clippy::unwrap_used",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used"
  },
  {
    "key": "clippy::use_debug",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#use_debug"
  },
  {
    "key": "clippy::use_self",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#use_self"
  },
  {
    "key": "clippy::used_underscore_binding",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding"
  },
  {
    "key": "clippy::useless_asref",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref"
  },
  {
    "key": "clippy::useless_attribute",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_attribute"
  },
  {
    "key": "clippy::useless_conversion",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion"
  },
  {
    "key": "clippy::useless_format",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_format"
  },
  {
    "key": "clippy::useless_let_if_seq",
    "name": "Checks for variable declarations immediately followed by a conditional affectation.",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_let_if_seq"
  },
  {
    "key": "clippy::useless_transmute",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute"
  },
  {
    "key": "clippy::useless_vec",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec"
  },
  {
    "key": "clippy::vec_box",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#vec_box"
  },
  {
    "key": "clippy::verbose_bit_mask",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#verbose_bit_mask"
  },
  {
    "key": "clippy::verbose_file_reads",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#verbose_file_reads"
  },
  {
    "key": "clippy::vtable_address_comparisons",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#vtable_address_comparisons"
  },
  {
    "key": "clippy::while_immutable_condition",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#while_immutable_condition"
  },
  {
    "key": "clippy::while_let_loop",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop"
  },
  {
    "key": "clippy::while_let_on_iterator",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator"
  },
  {
    "key": "clippy::wildcard_dependencies",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_dependencies"
  },
  {
    "key": "clippy::wildcard_enum_match_arm",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm"
  },
  {
    "key": "clippy::wildcard_imports",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_imports"
  },
  {
    "key": "clippy::wildcard_in_or_patterns",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns"
  },
  {
    "key": "clippy::write_literal",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#write_literal"
  },
  {
    "key": "clippy::write_with_newline",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#write_with_newline"
  },
  {
    "key": "clippy::writeln_empty_string",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#writeln_empty_string"
  },
  {
    "key": "clippy::wrong_pub_self_convention",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wrong_pub_self_convention"
  },
  {
    "key": "clippy::wrong_self_convention",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention"
  },
  {
    "key": "clippy::wrong_transmute",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#wrong_transmute"
  },
  {
    "key": "clippy::zero_divided_by_zero",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#zero_divided_by_zero"
  },
  {
    "key": "clippy::zero_prefixed_literal",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal"
  },
  {
    "key": "clippy::zero_ptr",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr"
  },
  {
    "key": "clippy::zero_width_space",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#zero_width_space"
  },
  {
    "key": "clippy::zst_offset",
    "name": "TODO",
    "url": "https://rust-lang.github.io/rust-clippy/master/index.html#zst_offset"
  }
]